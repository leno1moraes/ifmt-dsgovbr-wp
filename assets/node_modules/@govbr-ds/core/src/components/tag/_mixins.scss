// TODO: Rever todo o código
@mixin tag-configs {
  @include tag-tokens;
  @include tag-default;
  @include tag-interaction;
  @include tag-interaction-base;
  @include tag-interaction-select;
  @include tag-text;
  @include tag-status;
  @include tag-count;
  @include tag-icon;
  @include tag-sizes;
  @include tag-colors;
}

@mixin tag-tokens {
  --tag-background: var(--interactive);
  --tag-opacity: var(--surface-opacity-xs);
  --tag-font-size: var(--font-size-scale-up-01);
  --tag-margin: 0;
  --tag-icon: var(--icon-size-base);
  --tag-height: var(--tag-height-medium);
  --tag-height-small: var(--spacing-scale-2xh);
  --tag-height-medium: var(--spacing-scale-3xh);
  --tag-height-large: var(--spacing-scale-4xh);
  --tag-border-radius: var(--spacing-scale-half);
  --tag-label-spacing: var(--spacing-horizontal-center);
  --tag-label-size: var(--font-size-scale-base);
  --tag-label-weight: var(--font-weight-medium);
  --tag-label-margin: var(--spacing-scale-half);
}

@mixin tag-sizes {
  @each $size, $translate in ("small", 1px), ("medium", 3px), ("large", 6px) {
    @each $types
      in (
        "interaction",
        "interaction-select",
        "text",
        "status",
        "count",
        "icon"
      )
    {
      &.#{$types}.#{$size} {
        --tag-height: var(--tag-height-#{$size});
        // top: $translate;
      }
    }
  }
}

@mixin tag-interaction-base {
  --tag-height-small: var(--spacing-scale-4x);
  --tag-height-medium: var(--spacing-scale-5x);
  --tag-height-large: var(--spacing-scale-5xh);
  --tag-height-extra: var(--spacing-scale-3xh);
  --tag-background: var(--color-primary-default);
  --tag-label-size: var(--font-size-scale-up-01);
  font-size: var(--tag-label-size);
  padding: var(--spacing-scale-base);
  vertical-align: top;
}

@mixin tag-interaction {
  &.interaction {
    @include dark-mode;
    @include tag-interaction-base;

    .#{$prefix}button {
      --button-size: var(--tag-height-extra);
      color: var(--color-dark);
      margin-left: var(--spacing-scale-base);
    }

    &[data-toggle] {
      @include hover;
    }
    &:hover button.#{$prefix}button.circle {
      background-image: linear-gradient(
        rgba(var(--color-dark-rgb), var(--hover)),
        rgba(var(--color-dark-rgb), var(--hover))
      );
    }
    &:active button.#{$prefix}button.circle {
      background-image: linear-gradient(
        rgba(var(--color-dark-rgb), var(--pressed)),
        rgba(var(--color-dark-rgb), var(--pressed))
      );
    }

    &:hover {
      cursor: pointer;
    }
  }
}

@mixin tag-interaction-select {
  &.interaction-select {
    @include tag-interaction-base;
    @include hover("color-dark");
    --hover: var(--hover-dark);
    padding: 0;

    &.selected {
      --tag-background: var(--selected);
    }
  }
}

@mixin tag-text {
  &.text {
    --tag-height-small: var(--spacing-scale-2xh);
    --tag-height-medium: var(--spacing-scale-3xh);
    --tag-height-large: var(--spacing-scale-4xh);
    border-radius: var(--tag-border-radius);

    span {
      padding-bottom: 3px;
    }
  }
}

@mixin tag-status {
  &.status {
    --tag-height-small: var(--spacing-scale-baseh);
    --tag-height-medium: var(--spacing-scale-2x);
    --tag-height-large: var(--spacing-scale-3x);
    --tag-label-weight: var(--font-weight-regular);
    border-radius: 100em;
    box-shadow: 0 0 0 1px v(color-secondary-01);
    display: inline-block;
    line-height: 1;
    padding: 4px 6px;
    position: relative;
    vertical-align: middle;
    width: var(--tag-height);
    z-index: 999;
    + span:not(.#{$prefix}tag) {
      display: inline-block;
      margin-left: var(--spacing-scale-half);
      position: relative;
      top: 3px;
    }
  }
}

@mixin tag-count {
  &.count {
    --tag-height-small: var(--spacing-scale-2xh);
    --tag-height-medium: var(--spacing-scale-3x);
    --tag-height-large: var(--spacing-scale-3xh);
    border-radius: 100em;
    box-shadow: 0 0 0 1px var(--color-secondary-01);
    display: inline-block;
    line-height: 1;
    min-height: var(--tag-height);
    min-width: var(--tag-height);
    padding: 2px 4px;
    position: relative;
    text-align: center;
  }
}

@mixin tag-icon {
  &.icon {
    --tag-height-small: var(--spacing-scale-3xh);
    --tag-height-medium: var(--spacing-scale-4x);
    --tag-height-large: var(--spacing-scale-5xh);
    border-radius: 50%;
    padding: 0;
    text-align: center;
    width: var(--tag-height);
  }
}

@mixin tag-colors {
  @each $color
    in ("01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11")
  {
    &.support-#{$color} {
      --tag-background: var(--color-support-#{$color});
    }
  }

  @each $key, $value in $br-colors {
    &.is-#{$key},
    &.#{$key},
    &[#{$key}] {
      background-color: $value;
    }
  }
  @each $color in "success", "danger", "warning", "info" {
    &.is-#{$color},
    &.#{$color},
    &[#{$color}] {
      background-color: var(--#{$color});
    }
  }
}

@mixin tag-default {
  align-items: center;
  background: var(--tag-background);
  border-radius: var(--tag-border-radius);
  color: var(--color-dark);
  display: inline-flex;
  font-size: var(--tag-label-size);
  font-weight: var(--tag-label-weight);
  height: var(--tag-height);
  justify-content: center;
  padding: var(--spacing-scale-base);

  span {
    margin: var(--tag-label-margin);
  }

  input {
    opacity: 0;
    position: relative;
    width: 0;

    &:focus {
      &:checked + label,
      + label {
        outline-color: var(--focus-color);
        outline-offset: var(--focus-offset);
        outline-style: var(--focus-style);
        outline-width: var(--focus-width);
        padding: var(--spacing-scale-base);
      }
    }

    + label {
      color: var(--color-dark);
      cursor: pointer;
      padding: var(--spacing-scale-base);
      position: relative;

      &::after {
        content: "";
        display: none;
        height: 20px;
        left: 0;
        position: relative;
        width: 20px;
      }
    }

    &:checked + label::after {
      border: solid var(--color-dark);
      border-width: 0 3px 3px 0;
      content: "";
      display: inline-block;
      height: var(--icon-size-sm);
      margin: auto var(--spacing-scale-base);
      transform: rotate(45deg);
      width: 8px;
    }
  }

  // TODO: Este código ainda é necessário?
  &.tag-input-close {
    .close {
      button {
        --focus-offset: 0;
        @include hover;
        @include focus;
        background: transparent;
        border: 0;
        color: v(color-support-03);
        outline: 0;
        padding-left: v(spacing-scale-baseh);
      }
    }
  }
}
